/* tslint:disable */
/* eslint-disable */
/**
 * Product Catalog API
 * Manage your products
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCategoryHttpRequest
 */
export interface CreateCategoryHttpRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateCategoryHttpRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCategoryHttpRequest
     */
    description: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateCategoryHttpRequest
     */
    parentIds: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateCategoryHttpRequest
     */
    subCategoryIds: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateCategoryHttpRequest
     */
    productIds: Array<string>;
}

/**
 * Check if a given object implements the CreateCategoryHttpRequest interface.
 */
export function instanceOfCreateCategoryHttpRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "parentIds" in value;
    isInstance = isInstance && "subCategoryIds" in value;
    isInstance = isInstance && "productIds" in value;

    return isInstance;
}

export function CreateCategoryHttpRequestFromJSON(json: any): CreateCategoryHttpRequest {
    return CreateCategoryHttpRequestFromJSONTyped(json, false);
}

export function CreateCategoryHttpRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCategoryHttpRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'parentIds': json['parentIds'],
        'subCategoryIds': json['subCategoryIds'],
        'productIds': json['productIds'],
    };
}

export function CreateCategoryHttpRequestToJSON(value?: CreateCategoryHttpRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'parentIds': value.parentIds,
        'subCategoryIds': value.subCategoryIds,
        'productIds': value.productIds,
    };
}

